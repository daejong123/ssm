<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.daejong.vip.dao.VipDao">

    <resultMap id="VIPMap" type="VipEntity">
        <id property="id" column="id"/>
        <!--按查询嵌套, 两次查询.-->
        <association property="rank" javaType="vipRankEntity" column="rank"
                     select="com.daejong.vip.dao.VipRandDao.select"></association>
    </resultMap>

    <!--
    要实现动态传入表名、列名，需要做如下修改
    添加属性statementType="STATEMENT"
    同时sql里的属有变量取值都改成${xxxx}，而不是#{xxx}
    1. statementType：STATEMENT（非预编译），PREPARED（预编译）或CALLABLE中的任意一个，
    这就告诉 MyBatis 分别使用Statement，PreparedStatement或者CallableStatement。
    默认：PREPARED。这里显然不能使用预编译，要改成非预编译。
    2. ${xxxx}：$将传入的数据直接显示生成在sql中，对于字符串数据，需要手动加上引号。
    -->
    <select id="select" resultType="VipEntity">
        select * from  sys_detail where ${key} = #{value}
    </select>

    <select id="selectLike" parameterType="Map" resultMap="VIPMap">
        select * from sys_detail
        <where>
            <if test="key != null">
                or code like CONCAT('%',#{key},'%')
                or name like CONCAT('%',#{key},'%')
                or qq like CONCAT('%',#{key},'%')
                or email like CONCAT('%',#{key},'%')
                or address like CONCAT('%',#{key},'%')
                or remark like CONCAT('%',#{key},'%')
            </if>
        </where>
        order by id
    </select>

    <update id="update">
        update sys_detail SET
        code=#{code},
        name=#{name},
        age=#{age},
        sex=#{male},
        qq=#{qq},
        email=#{email},
        address=#{address},
        zip=#{zip},
        remark=#{remark},
        rank=#{rank},
        amount=#{amount},
        where id=#{id}
    </update>
</mapper>